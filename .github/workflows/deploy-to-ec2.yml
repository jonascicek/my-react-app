name: Deploy React App to EC2

on:
  push:
    branches: [main]

jobs:
  ci_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm ci
      - run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: dist/

  infra_provision:
    runs-on: ubuntu-latest
    needs: ci_build
    steps:
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - uses: hashicorp/setup-terraform@v3
      - run: terraform -chdir=terraform init
      - run: |
          echo ">>> Terraform Plan Preview:"
          terraform -chdir=terraform plan
          echo ">>> Terraform Apply:"
          terraform -chdir=terraform apply -auto-approve
          echo ">>> Terraform Output:"
          terraform -chdir=terraform output
        env:
          TF_VAR_ssh_public_key: ${{ secrets.SSH_PUBLIC_KEY }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_tf_state_bucket: ${{ secrets.TF_STATE_BUCKET }}
      - id: output
        run: echo "EC2_IP=$(terraform -chdir=terraform output -raw ec2_ip)" >> $GITHUB_ENV

  app_deploy:
    runs-on: ubuntu-latest
    needs: infra_provision
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: dist/
      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - run: |
          scp -o StrictHostKeyChecking=no -r dist/* ubuntu@${{ env.EC2_IP }}:/var/www/html
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.EC2_IP }} 'sudo systemctl restart nginx'